/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _OPERACIONES_ARITMETICAS_H_RPCGEN
#define _OPERACIONES_ARITMETICAS_H_RPCGEN

#define RPCGEN_VERSION	199506

#include <rpc/rpc.h>


struct suma_1_argument {
	int arg1;
	int arg2;
};
typedef struct suma_1_argument suma_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_suma_1_argument(XDR *, suma_1_argument);
#elif __STDC__
extern  bool_t xdr_suma_1_argument(XDR *, suma_1_argument);
#else /* Old Style C */
bool_t xdr_suma_1_argument();
#endif /* Old Style C */


struct resta_1_argument {
	int arg1;
	int arg2;
};
typedef struct resta_1_argument resta_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_resta_1_argument(XDR *, resta_1_argument);
#elif __STDC__
extern  bool_t xdr_resta_1_argument(XDR *, resta_1_argument);
#else /* Old Style C */
bool_t xdr_resta_1_argument();
#endif /* Old Style C */


struct multiplicacion_1_argument {
	int arg1;
	int arg2;
};
typedef struct multiplicacion_1_argument multiplicacion_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_multiplicacion_1_argument(XDR *, multiplicacion_1_argument);
#elif __STDC__
extern  bool_t xdr_multiplicacion_1_argument(XDR *, multiplicacion_1_argument);
#else /* Old Style C */
bool_t xdr_multiplicacion_1_argument();
#endif /* Old Style C */


struct division_1_argument {
	int arg1;
	int arg2;
};
typedef struct division_1_argument division_1_argument;
#ifdef __cplusplus
extern "C" bool_t xdr_division_1_argument(XDR *, division_1_argument);
#elif __STDC__
extern  bool_t xdr_division_1_argument(XDR *, division_1_argument);
#else /* Old Style C */
bool_t xdr_division_1_argument();
#endif /* Old Style C */


#define OPERADOR ((rpc_uint)0x20000001)
#define ARITMETICAS ((rpc_uint)1)

#ifdef __cplusplus
#define SUMA ((rpc_uint)1)
extern "C" int * suma_1(int , int , CLIENT *);
extern "C" int * suma_1_svc(int , int , struct svc_req *);
#define RESTA ((rpc_uint)1)
extern "C" int * resta_1(int , int , CLIENT *);
extern "C" int * resta_1_svc(int , int , struct svc_req *);
#define MULTIPLICACION ((rpc_uint)1)
extern "C" int * multiplicacion_1(int , int , CLIENT *);
extern "C" int * multiplicacion_1_svc(int , int , struct svc_req *);
#define DIVISION ((rpc_uint)1)
extern "C" int * division_1(int , int , CLIENT *);
extern "C" int * division_1_svc(int , int , struct svc_req *);

#elif __STDC__
#define SUMA ((rpc_uint)1)
extern  int * suma_1(int , int , CLIENT *);
extern  int * suma_1_svc(int , int , struct svc_req *);
#define RESTA ((rpc_uint)1)
extern  int * resta_1(int , int , CLIENT *);
extern  int * resta_1_svc(int , int , struct svc_req *);
#define MULTIPLICACION ((rpc_uint)1)
extern  int * multiplicacion_1(int , int , CLIENT *);
extern  int * multiplicacion_1_svc(int , int , struct svc_req *);
#define DIVISION ((rpc_uint)1)
extern  int * division_1(int , int , CLIENT *);
extern  int * division_1_svc(int , int , struct svc_req *);

#else /* Old Style C */
#define SUMA ((rpc_uint)1)
extern  int * suma_1();
extern  int * suma_1_svc();
#define RESTA ((rpc_uint)1)
extern  int * resta_1();
extern  int * resta_1_svc();
#define MULTIPLICACION ((rpc_uint)1)
extern  int * multiplicacion_1();
extern  int * multiplicacion_1_svc();
#define DIVISION ((rpc_uint)1)
extern  int * division_1();
extern  int * division_1_svc();
#endif /* Old Style C */

#endif /* !_OPERACIONES_ARITMETICAS_H_RPCGEN */
